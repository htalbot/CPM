// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.3.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:461

#ifndef _TAO_IDL_ICPMS_BJUNIB_H_
#define _TAO_IDL_ICPMS_BJUNIB_H_

#include /**/ "ace/pre.h"

#include "ICPMC.h"
#include "IBasicEventCorba/IBasicEventCorbaS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::ICPM_module::ProcessDef>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::ProcessDef,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::ICPM_module::ProcessSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::ProcessSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::ICPM_module::NodeDef>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::NodeDef,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::ICPM_module::NodeSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::NodeSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::ICPM_module::CPMMSettingsStartup>
    : public
        Fixed_Size_SArg_Traits_T<
            ::ICPM_module::CPMMSettingsStartup,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::ICPM_module::CPMMSettings>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::CPMMSettings,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::ICPM_module::ObjectDesc>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::ObjectDesc,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::ICPM_module::ObjectDescSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::ObjectDescSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMPROCESS__SARG_TRAITS_)
#define _ICPM_MODULE_ICPMPROCESS__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ICPM_module::ICPMProcess>
    : public
        Object_SArg_Traits_T<
            ::ICPM_module::ICPMProcess_ptr,
            ::ICPM_module::ICPMProcess_var,
            ::ICPM_module::ICPMProcess_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMD__SARG_TRAITS_)
#define _ICPM_MODULE_ICPMD__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ICPM_module::ICPMD>
    : public
        Object_SArg_Traits_T<
            ::ICPM_module::ICPMD_ptr,
            ::ICPM_module::ICPMD_var,
            ::ICPM_module::ICPMD_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMOBJECT__SARG_TRAITS_)
#define _ICPM_MODULE_ICPMOBJECT__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ICPM_module::ICPMObject>
    : public
        Object_SArg_Traits_T<
            ::ICPM_module::ICPMObject_ptr,
            ::ICPM_module::ICPMObject_var,
            ::ICPM_module::ICPMObject_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class SArg_Traits< ::ICPM_module::UnavailableElementID>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::UnavailableElementID,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:685

  template<>
  class SArg_Traits< ::ICPM_module::UnavailableElementIDSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::ICPM_module::UnavailableElementIDSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMM__SARG_TRAITS_)
#define _ICPM_MODULE_ICPMM__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ICPM_module::ICPMM>
    : public
        Object_SArg_Traits_T<
            ::ICPM_module::ICPMM_ptr,
            ::ICPM_module::ICPMM_var,
            ::ICPM_module::ICPMM_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMEVENTMGR__SARG_TRAITS_)
#define _ICPM_MODULE_ICPMEVENTMGR__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ICPM_module::ICPMEventMgr>
    : public
        Object_SArg_Traits_T<
            ::ICPM_module::ICPMEventMgr_ptr,
            ::ICPM_module::ICPMEventMgr_var,
            ::ICPM_module::ICPMEventMgr_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_module\module_sh.cpp:38

namespace POA_ICPM_module
{
  

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_sh.cpp:76

  class ICPMProcess;
  typedef ICPMProcess *ICPMProcess_ptr;

  class ICPM_Export ICPMProcess
    : public virtual PortableServer::ServantBase
  {
  protected:
    ICPMProcess (void);
  
  public:
    /// Useful for template programming.
    typedef ::ICPM_module::ICPMProcess _stub_type;
    typedef ::ICPM_module::ICPMProcess_ptr _stub_ptr_type;
    typedef ::ICPM_module::ICPMProcess_var _stub_var_type;

    ICPMProcess (const ICPMProcess& rhs);
    virtual ~ICPMProcess (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::ICPM_module::ICPMProcess *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void object_list (
      ::ICPM_module::ObjectDescSeq_out list) = 0;

    static void object_list_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void ctrl_end (
      void) = 0;

    static void ctrl_end_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void ctrl_ping (
      void) = 0;

    static void ctrl_ping_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void show_console (
      ::CORBA::Boolean show) = 0;

    static void show_console_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void show_gui (
      ::CORBA::Boolean show) = 0;

    static void show_gui_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void as_server (
      ::CORBA::Boolean flag) = 0;

    static void as_server_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void as_gui (
      ::CORBA::Boolean flag) = 0;

    static void as_gui_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Long getpid (
      void) = 0;

    static void getpid_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_sh.cpp:76

  class ICPMD;
  typedef ICPMD *ICPMD_ptr;

  class ICPM_Export ICPMD
    : public virtual PortableServer::ServantBase
  {
  protected:
    ICPMD (void);
  
  public:
    /// Useful for template programming.
    typedef ::ICPM_module::ICPMD _stub_type;
    typedef ::ICPM_module::ICPMD_ptr _stub_ptr_type;
    typedef ::ICPM_module::ICPMD_var _stub_var_type;

    ICPMD (const ICPMD& rhs);
    virtual ~ICPMD (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::ICPM_module::ICPMD *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Boolean start (
      const ::ICPM_module::ProcessSeq & procs) = 0;

    static void start_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Boolean stop (
      const ::ICPM_module::ProcessSeq & procs) = 0;

    static void stop_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void show_console (
      const ::ICPM_module::ProcessSeq & procs,
      ::CORBA::Boolean show) = 0;

    static void show_console_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void show_gui (
      const ::ICPM_module::ProcessSeq & procs,
      ::CORBA::Boolean show) = 0;

    static void show_gui_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void get_launched_processes (
      ::ICPM_module::ProcessSeq_out processes) = 0;

    static void get_launched_processes_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void on_new_getting_reference_timeout (
      ::CORBA::Long loop_timeout_ms,
      ::CORBA::Long attempts) = 0;

    static void on_new_getting_reference_timeout_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_sh.cpp:76

  class ICPMObject;
  typedef ICPMObject *ICPMObject_ptr;

  class ICPM_Export ICPMObject
    : public virtual PortableServer::ServantBase
  {
  protected:
    ICPMObject (void);
  
  public:
    /// Useful for template programming.
    typedef ::ICPM_module::ICPMObject _stub_type;
    typedef ::ICPM_module::ICPMObject_ptr _stub_ptr_type;
    typedef ::ICPM_module::ICPMObject_var _stub_var_type;

    ICPMObject (const ICPMObject& rhs);
    virtual ~ICPMObject (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::ICPM_module::ICPMObject *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void get_version (
      ::CORBA::Long_out major,
      ::CORBA::Long_out minor,
      ::CORBA::Long_out patch) = 0;

    static void get_version_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void ctrl_ping (
      void) = 0;

    static void ctrl_ping_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_sh.cpp:76

  class ICPMM;
  typedef ICPMM *ICPMM_ptr;

  class ICPM_Export ICPMM
    : public virtual PortableServer::ServantBase
  {
  protected:
    ICPMM (void);
  
  public:
    /// Useful for template programming.
    typedef ::ICPM_module::ICPMM _stub_type;
    typedef ::ICPM_module::ICPMM_ptr _stub_ptr_type;
    typedef ::ICPM_module::ICPMM_var _stub_var_type;

    ICPMM (const ICPMM& rhs);
    virtual ~ICPMM (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::ICPM_module::ICPMM *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void get_settings (
      ::ICPM_module::CPMMSettings_out initial,
      ::ICPM_module::CPMMSettings_out current,
      ::CORBA::String_out current_settings_file) = 0;

    static void get_settings_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Boolean start (
      const ::ICPM_module::ProcessSeq & procs) = 0;

    static void start_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Boolean stop (
      const ::ICPM_module::ProcessSeq & procs) = 0;

    static void stop_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void show_console (
      const ::ICPM_module::ProcessSeq & procs,
      ::CORBA::Boolean show) = 0;

    static void show_console_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void show_gui (
      const ::ICPM_module::ProcessSeq & procs,
      ::CORBA::Boolean show) = 0;

    static void show_gui_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Boolean started (
      void) = 0;

    static void started_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Boolean get_unavailable (
      ::ICPM_module::UnavailableElementIDSeq_out nodes,
      ::ICPM_module::UnavailableElementIDSeq_out processes) = 0;

    static void get_unavailable_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void update_settings (
      const ::ICPM_module::CPMMSettings & new_initial_settings,
      const ::ICPM_module::CPMMSettings & new_current_settings,
      const char * file) = 0;

    static void update_settings_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Boolean save_settings_to (
      const char * target_file) = 0;

    static void save_settings_to_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual ::CORBA::Boolean set_as_default (
      void) = 0;

    static void set_as_default_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_sh.cpp:76

  class ICPMEventMgr;
  typedef ICPMEventMgr *ICPMEventMgr_ptr;

  class ICPM_Export ICPMEventMgr
    : public virtual POA_ICPM_module::ICPMObject
  {
  protected:
    ICPMEventMgr (void);
  
  public:
    /// Useful for template programming.
    typedef ::ICPM_module::ICPMEventMgr _stub_type;
    typedef ::ICPM_module::ICPMEventMgr_ptr _stub_ptr_type;
    typedef ::ICPM_module::ICPMEventMgr_var _stub_var_type;

    ICPMEventMgr (const ICPMEventMgr& rhs);
    virtual ~ICPMEventMgr (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::ICPM_module::ICPMEventMgr *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be\be_visitor_operation\operation_sh.cpp:39

    virtual void push (
      const ::IBASICEVENTCORBA_module::BasicEventCorba & event) = 0;

    static void push_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_sh.cpp:69

} // module ICPM_module

#include "ICPMS_T.h"


#include /**/ "ace/post.h"

#endif /* ifndef */

