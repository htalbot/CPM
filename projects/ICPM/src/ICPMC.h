// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.3.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:152

#ifndef _TAO_IDL_ICPMC_9ANPN3_H_
#define _TAO_IDL_ICPMC_9ANPN3_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "ICPM_Export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "IBasicEventCorba/IBasicEventCorbaC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 3 || TAO_BETA_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO ICPM_Export

// TAO_IDL - Generated from
// be\be_visitor_root\root_ch.cpp:160
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:38

namespace ICPM_module
{

  // TAO_IDL - Generated from
  // be\be_type.cpp:261

  struct ProcessDef;

  typedef
    ::TAO_Var_Var_T<
        ProcessDef
      >
    ProcessDef_var;

  typedef
    ::TAO_Out_T<
        ProcessDef
      >
    ProcessDef_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure\structure_ch.cpp:51

  struct ICPM_Export ProcessDef
  {

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef ProcessDef_var _var_type;
    typedef ProcessDef_out _out_type;
    
    ::TAO::String_Manager node_id;
    ::TAO::String_Manager process_id;
    ::TAO::String_Manager env_var_id;
    ::TAO::String_Manager module_name;
    ::TAO::String_Manager port_number;
    ::CORBA::Boolean enabled;
    ::TAO::String_Manager console;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_ICPM_MODULE_PROCESSSEQ_CH_)
#define _ICPM_MODULE_PROCESSSEQ_CH_

  class ProcessSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ProcessSeq
      >
    ProcessSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ProcessSeq
      >
    ProcessSeq_out;

  class ICPM_Export ProcessSeq
    : public
        ::TAO::unbounded_value_sequence<
            ProcessDef
          >
  {
  public:
    ProcessSeq (void);
    ProcessSeq ( ::CORBA::ULong max);
    ProcessSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ProcessDef* buffer,
      ::CORBA::Boolean release = false);
    ProcessSeq (const ProcessSeq &);
    virtual ~ProcessSeq (void);
    

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef ProcessSeq_var _var_type;
    typedef ProcessSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_type.cpp:261

  struct NodeDef;

  typedef
    ::TAO_Var_Var_T<
        NodeDef
      >
    NodeDef_var;

  typedef
    ::TAO_Out_T<
        NodeDef
      >
    NodeDef_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure\structure_ch.cpp:51

  struct ICPM_Export NodeDef
  {

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef NodeDef_var _var_type;
    typedef NodeDef_out _out_type;
    
    ::TAO::String_Manager node_id;
    ICPM_module::ProcessSeq processes;
    ::CORBA::Boolean enabled;
    ::TAO::String_Manager env_var;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_ICPM_MODULE_NODESEQ_CH_)
#define _ICPM_MODULE_NODESEQ_CH_

  class NodeSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        NodeSeq
      >
    NodeSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        NodeSeq
      >
    NodeSeq_out;

  class ICPM_Export NodeSeq
    : public
        ::TAO::unbounded_value_sequence<
            NodeDef
          >
  {
  public:
    NodeSeq (void);
    NodeSeq ( ::CORBA::ULong max);
    NodeSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      NodeDef* buffer,
      ::CORBA::Boolean release = false);
    NodeSeq (const NodeSeq &);
    virtual ~NodeSeq (void);
    

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef NodeSeq_var _var_type;
    typedef NodeSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_type.cpp:261

  struct CPMMSettingsStartup;

  typedef
    ::TAO_Fixed_Var_T<
        CPMMSettingsStartup
      >
    CPMMSettingsStartup_var;

  typedef
    CPMMSettingsStartup &
    CPMMSettingsStartup_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure\structure_ch.cpp:51

  struct ICPM_Export CPMMSettingsStartup
  {

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef CPMMSettingsStartup_var _var_type;
    typedef CPMMSettingsStartup_out _out_type;
    
    ::CORBA::Boolean auto_launch_processes;
    ::CORBA::Long required_time_before_stop_since_start_ms;
  };

  // TAO_IDL - Generated from
  // be\be_type.cpp:261

  struct CPMMSettings;

  typedef
    ::TAO_Var_Var_T<
        CPMMSettings
      >
    CPMMSettings_var;

  typedef
    ::TAO_Out_T<
        CPMMSettings
      >
    CPMMSettings_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure\structure_ch.cpp:51

  struct ICPM_Export CPMMSettings
  {

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef CPMMSettings_var _var_type;
    typedef CPMMSettings_out _out_type;
    
    ::TAO::String_Manager settings_id;
    ICPM_module::CPMMSettingsStartup startup;
    ICPM_module::NodeSeq nodes;
  };

  // TAO_IDL - Generated from
  // be\be_type.cpp:261

  struct ObjectDesc;

  typedef
    ::TAO_Var_Var_T<
        ObjectDesc
      >
    ObjectDesc_var;

  typedef
    ::TAO_Out_T<
        ObjectDesc
      >
    ObjectDesc_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure\structure_ch.cpp:51

  struct ICPM_Export ObjectDesc
  {

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef ObjectDesc_var _var_type;
    typedef ObjectDesc_out _out_type;
    
    ::TAO::String_Manager object_id;
    ::CORBA::Long status;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_ICPM_MODULE_OBJECTDESCSEQ_CH_)
#define _ICPM_MODULE_OBJECTDESCSEQ_CH_

  class ObjectDescSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ObjectDescSeq
      >
    ObjectDescSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ObjectDescSeq
      >
    ObjectDescSeq_out;

  class ICPM_Export ObjectDescSeq
    : public
        ::TAO::unbounded_value_sequence<
            ObjectDesc
          >
  {
  public:
    ObjectDescSeq (void);
    ObjectDescSeq ( ::CORBA::ULong max);
    ObjectDescSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ObjectDesc* buffer,
      ::CORBA::Boolean release = false);
    ObjectDescSeq (const ObjectDescSeq &);
    virtual ~ObjectDescSeq (void);
    

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef ObjectDescSeq_var _var_type;
    typedef ObjectDescSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_ICPM_MODULE_ICPMPROCESS__VAR_OUT_CH_)
#define _ICPM_MODULE_ICPMPROCESS__VAR_OUT_CH_

  class ICPMProcess;
  typedef ICPMProcess *ICPMProcess_ptr;

  typedef
    TAO_Objref_Var_T<
        ICPMProcess
      >
    ICPMProcess_var;
  
  typedef
    TAO_Objref_Out_T<
        ICPMProcess
      >
    ICPMProcess_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class ICPM_Export ICPMProcess
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ICPMProcess>;

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef ICPMProcess_ptr _ptr_type;
    typedef ICPMProcess_var _var_type;
    typedef ICPMProcess_out _out_type;

    // The static operations.
    static ICPMProcess_ptr _duplicate (ICPMProcess_ptr obj);

    static void _tao_release (ICPMProcess_ptr obj);

    static ICPMProcess_ptr _narrow (::CORBA::Object_ptr obj);
    static ICPMProcess_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ICPMProcess_ptr _nil (void);

    virtual void object_list (
      ::ICPM_module::ObjectDescSeq_out list);

    virtual void ctrl_end (
      void);

    virtual void ctrl_ping (
      void);

    virtual void show_console (
      ::CORBA::Boolean show);

    virtual void show_gui (
      ::CORBA::Boolean show);

    virtual void as_server (
      ::CORBA::Boolean flag);

    virtual void as_gui (
      ::CORBA::Boolean flag);

    virtual ::CORBA::Long getpid (
      void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ICPMProcess (void);

    // Concrete non-local interface only.
    ICPMProcess (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ICPMProcess (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ICPMProcess (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ICPMProcess (const ICPMProcess &);

    void operator= (const ICPMProcess &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_ICPM_MODULE_ICPMD__VAR_OUT_CH_)
#define _ICPM_MODULE_ICPMD__VAR_OUT_CH_

  class ICPMD;
  typedef ICPMD *ICPMD_ptr;

  typedef
    TAO_Objref_Var_T<
        ICPMD
      >
    ICPMD_var;
  
  typedef
    TAO_Objref_Out_T<
        ICPMD
      >
    ICPMD_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class ICPM_Export ICPMD
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ICPMD>;

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef ICPMD_ptr _ptr_type;
    typedef ICPMD_var _var_type;
    typedef ICPMD_out _out_type;

    // The static operations.
    static ICPMD_ptr _duplicate (ICPMD_ptr obj);

    static void _tao_release (ICPMD_ptr obj);

    static ICPMD_ptr _narrow (::CORBA::Object_ptr obj);
    static ICPMD_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ICPMD_ptr _nil (void);

    virtual ::CORBA::Boolean start (
      const ::ICPM_module::ProcessSeq & procs);

    virtual ::CORBA::Boolean stop (
      const ::ICPM_module::ProcessSeq & procs);

    virtual void show_console (
      const ::ICPM_module::ProcessSeq & procs,
      ::CORBA::Boolean show);

    virtual void show_gui (
      const ::ICPM_module::ProcessSeq & procs,
      ::CORBA::Boolean show);

    virtual void get_launched_processes (
      ::ICPM_module::ProcessSeq_out processes);

    virtual void on_new_getting_reference_timeout (
      ::CORBA::Long loop_timeout_ms,
      ::CORBA::Long attempts);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ICPMD (void);

    // Concrete non-local interface only.
    ICPMD (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ICPMD (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ICPMD (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ICPMD (const ICPMD &);

    void operator= (const ICPMD &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_ICPM_MODULE_ICPMOBJECT__VAR_OUT_CH_)
#define _ICPM_MODULE_ICPMOBJECT__VAR_OUT_CH_

  class ICPMObject;
  typedef ICPMObject *ICPMObject_ptr;

  typedef
    TAO_Objref_Var_T<
        ICPMObject
      >
    ICPMObject_var;
  
  typedef
    TAO_Objref_Out_T<
        ICPMObject
      >
    ICPMObject_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class ICPM_Export ICPMObject
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ICPMObject>;

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef ICPMObject_ptr _ptr_type;
    typedef ICPMObject_var _var_type;
    typedef ICPMObject_out _out_type;

    // The static operations.
    static ICPMObject_ptr _duplicate (ICPMObject_ptr obj);

    static void _tao_release (ICPMObject_ptr obj);

    static ICPMObject_ptr _narrow (::CORBA::Object_ptr obj);
    static ICPMObject_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ICPMObject_ptr _nil (void);

    virtual void get_version (
      ::CORBA::Long_out major,
      ::CORBA::Long_out minor,
      ::CORBA::Long_out patch);

    virtual void ctrl_ping (
      void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ICPMObject (void);

    // Concrete non-local interface only.
    ICPMObject (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ICPMObject (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ICPMObject (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ICPMObject (const ICPMObject &);

    void operator= (const ICPMObject &);
  };

  // TAO_IDL - Generated from
  // be\be_type.cpp:261

  struct UnavailableElementID;

  typedef
    ::TAO_Var_Var_T<
        UnavailableElementID
      >
    UnavailableElementID_var;

  typedef
    ::TAO_Out_T<
        UnavailableElementID
      >
    UnavailableElementID_out;

  // TAO_IDL - Generated from
  // be\be_visitor_structure\structure_ch.cpp:51

  struct ICPM_Export UnavailableElementID
  {

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef UnavailableElementID_var _var_type;
    typedef UnavailableElementID_out _out_type;
    
    ::TAO::String_Manager element_id;
  };

  // TAO_IDL - Generated from
  // be\be_visitor_sequence\sequence_ch.cpp:102

#if !defined (_ICPM_MODULE_UNAVAILABLEELEMENTIDSEQ_CH_)
#define _ICPM_MODULE_UNAVAILABLEELEMENTIDSEQ_CH_

  class UnavailableElementIDSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        UnavailableElementIDSeq
      >
    UnavailableElementIDSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        UnavailableElementIDSeq
      >
    UnavailableElementIDSeq_out;

  class ICPM_Export UnavailableElementIDSeq
    : public
        ::TAO::unbounded_value_sequence<
            UnavailableElementID
          >
  {
  public:
    UnavailableElementIDSeq (void);
    UnavailableElementIDSeq ( ::CORBA::ULong max);
    UnavailableElementIDSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      UnavailableElementID* buffer,
      ::CORBA::Boolean release = false);
    UnavailableElementIDSeq (const UnavailableElementIDSeq &);
    virtual ~UnavailableElementIDSeq (void);
    

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    
    typedef UnavailableElementIDSeq_var _var_type;
    typedef UnavailableElementIDSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_ICPM_MODULE_ICPMM__VAR_OUT_CH_)
#define _ICPM_MODULE_ICPMM__VAR_OUT_CH_

  class ICPMM;
  typedef ICPMM *ICPMM_ptr;

  typedef
    TAO_Objref_Var_T<
        ICPMM
      >
    ICPMM_var;
  
  typedef
    TAO_Objref_Out_T<
        ICPMM
      >
    ICPMM_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class ICPM_Export ICPMM
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<ICPMM>;

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef ICPMM_ptr _ptr_type;
    typedef ICPMM_var _var_type;
    typedef ICPMM_out _out_type;

    // The static operations.
    static ICPMM_ptr _duplicate (ICPMM_ptr obj);

    static void _tao_release (ICPMM_ptr obj);

    static ICPMM_ptr _narrow (::CORBA::Object_ptr obj);
    static ICPMM_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ICPMM_ptr _nil (void);

    virtual void get_settings (
      ::ICPM_module::CPMMSettings_out initial,
      ::ICPM_module::CPMMSettings_out current,
      ::CORBA::String_out current_settings_file);

    virtual ::CORBA::Boolean start (
      const ::ICPM_module::ProcessSeq & procs);

    virtual ::CORBA::Boolean stop (
      const ::ICPM_module::ProcessSeq & procs);

    virtual void show_console (
      const ::ICPM_module::ProcessSeq & procs,
      ::CORBA::Boolean show);

    virtual void show_gui (
      const ::ICPM_module::ProcessSeq & procs,
      ::CORBA::Boolean show);

    virtual ::CORBA::Boolean started (
      void);

    virtual ::CORBA::Boolean get_unavailable (
      ::ICPM_module::UnavailableElementIDSeq_out nodes,
      ::ICPM_module::UnavailableElementIDSeq_out processes);

    virtual void update_settings (
      const ::ICPM_module::CPMMSettings & new_initial_settings,
      const ::ICPM_module::CPMMSettings & new_current_settings,
      const char * file);

    virtual ::CORBA::Boolean save_settings_to (
      const char * target_file);

    virtual ::CORBA::Boolean set_as_default (
      void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ICPMM (void);

    // Concrete non-local interface only.
    ICPMM (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ICPMM (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ICPMM (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ICPMM (const ICPMM &);

    void operator= (const ICPMM &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_ICPM_MODULE_ICPMEVENTMGR__VAR_OUT_CH_)
#define _ICPM_MODULE_ICPMEVENTMGR__VAR_OUT_CH_

  class ICPMEventMgr;
  typedef ICPMEventMgr *ICPMEventMgr_ptr;

  typedef
    TAO_Objref_Var_T<
        ICPMEventMgr
      >
    ICPMEventMgr_var;
  
  typedef
    TAO_Objref_Out_T<
        ICPMEventMgr
      >
    ICPMEventMgr_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class ICPM_Export ICPMEventMgr
    : public virtual ::ICPM_module::ICPMObject
  
  {
  public:
    friend class TAO::Narrow_Utils<ICPMEventMgr>;

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef ICPMEventMgr_ptr _ptr_type;
    typedef ICPMEventMgr_var _var_type;
    typedef ICPMEventMgr_out _out_type;

    // The static operations.
    static ICPMEventMgr_ptr _duplicate (ICPMEventMgr_ptr obj);

    static void _tao_release (ICPMEventMgr_ptr obj);

    static ICPMEventMgr_ptr _narrow (::CORBA::Object_ptr obj);
    static ICPMEventMgr_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ICPMEventMgr_ptr _nil (void);

    virtual void push (
      const ::IBASICEVENTCORBA_module::BasicEventCorba & event);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    ICPMEventMgr (void);

    // Concrete non-local interface only.
    ICPMEventMgr (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    ICPMEventMgr (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~ICPMEventMgr (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ICPMEventMgr (const ICPMEventMgr &);

    void operator= (const ICPMEventMgr &);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:67

} // module ICPM_module

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::ICPM_module::ProcessDef>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::ProcessDef,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::ICPM_module::ProcessSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::ProcessSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::ICPM_module::NodeDef>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::NodeDef,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::ICPM_module::NodeSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::NodeSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::ICPM_module::CPMMSettingsStartup>
    : public
        Fixed_Size_Arg_Traits_T<
            ::ICPM_module::CPMMSettingsStartup,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::ICPM_module::CPMMSettings>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::CPMMSettings,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::ICPM_module::ObjectDesc>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::ObjectDesc,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::ICPM_module::ObjectDescSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::ObjectDescSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMPROCESS__ARG_TRAITS_)
#define _ICPM_MODULE_ICPMPROCESS__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ICPM_module::ICPMProcess>
    : public
        Object_Arg_Traits_T<
            ::ICPM_module::ICPMProcess_ptr,
            ::ICPM_module::ICPMProcess_var,
            ::ICPM_module::ICPMProcess_out,
            TAO::Objref_Traits<ICPM_module::ICPMProcess>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMD__ARG_TRAITS_)
#define _ICPM_MODULE_ICPMD__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ICPM_module::ICPMD>
    : public
        Object_Arg_Traits_T<
            ::ICPM_module::ICPMD_ptr,
            ::ICPM_module::ICPMD_var,
            ::ICPM_module::ICPMD_out,
            TAO::Objref_Traits<ICPM_module::ICPMD>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMOBJECT__ARG_TRAITS_)
#define _ICPM_MODULE_ICPMOBJECT__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ICPM_module::ICPMObject>
    : public
        Object_Arg_Traits_T<
            ::ICPM_module::ICPMObject_ptr,
            ::ICPM_module::ICPMObject_var,
            ::ICPM_module::ICPMObject_out,
            TAO::Objref_Traits<ICPM_module::ICPMObject>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::ICPM_module::UnavailableElementID>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::UnavailableElementID,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::ICPM_module::UnavailableElementIDSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::ICPM_module::UnavailableElementIDSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMM__ARG_TRAITS_)
#define _ICPM_MODULE_ICPMM__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ICPM_module::ICPMM>
    : public
        Object_Arg_Traits_T<
            ::ICPM_module::ICPMM_ptr,
            ::ICPM_module::ICPMM_var,
            ::ICPM_module::ICPMM_out,
            TAO::Objref_Traits<ICPM_module::ICPMM>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:147

#if !defined (_ICPM_MODULE_ICPMEVENTMGR__ARG_TRAITS_)
#define _ICPM_MODULE_ICPMEVENTMGR__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::ICPM_module::ICPMEventMgr>
    : public
        Object_Arg_Traits_T<
            ::ICPM_module::ICPMEventMgr_ptr,
            ::ICPM_module::ICPMEventMgr_var,
            ::ICPM_module::ICPMEventMgr_out,
            TAO::Objref_Traits<ICPM_module::ICPMEventMgr>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_ICPM_MODULE_ICPMPROCESS__TRAITS_)
#define _ICPM_MODULE_ICPMPROCESS__TRAITS_

  template<>
  struct ICPM_Export Objref_Traits< ::ICPM_module::ICPMProcess>
  {
    static ::ICPM_module::ICPMProcess_ptr duplicate (
        ::ICPM_module::ICPMProcess_ptr p);
    static void release (
        ::ICPM_module::ICPMProcess_ptr p);
    static ::ICPM_module::ICPMProcess_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ICPM_module::ICPMProcess_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_ICPM_MODULE_ICPMD__TRAITS_)
#define _ICPM_MODULE_ICPMD__TRAITS_

  template<>
  struct ICPM_Export Objref_Traits< ::ICPM_module::ICPMD>
  {
    static ::ICPM_module::ICPMD_ptr duplicate (
        ::ICPM_module::ICPMD_ptr p);
    static void release (
        ::ICPM_module::ICPMD_ptr p);
    static ::ICPM_module::ICPMD_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ICPM_module::ICPMD_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_ICPM_MODULE_ICPMOBJECT__TRAITS_)
#define _ICPM_MODULE_ICPMOBJECT__TRAITS_

  template<>
  struct ICPM_Export Objref_Traits< ::ICPM_module::ICPMObject>
  {
    static ::ICPM_module::ICPMObject_ptr duplicate (
        ::ICPM_module::ICPMObject_ptr p);
    static void release (
        ::ICPM_module::ICPMObject_ptr p);
    static ::ICPM_module::ICPMObject_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ICPM_module::ICPMObject_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_ICPM_MODULE_ICPMM__TRAITS_)
#define _ICPM_MODULE_ICPMM__TRAITS_

  template<>
  struct ICPM_Export Objref_Traits< ::ICPM_module::ICPMM>
  {
    static ::ICPM_module::ICPMM_ptr duplicate (
        ::ICPM_module::ICPMM_ptr p);
    static void release (
        ::ICPM_module::ICPMM_ptr p);
    static ::ICPM_module::ICPMM_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ICPM_module::ICPMM_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_ICPM_MODULE_ICPMEVENTMGR__TRAITS_)
#define _ICPM_MODULE_ICPMEVENTMGR__TRAITS_

  template<>
  struct ICPM_Export Objref_Traits< ::ICPM_module::ICPMEventMgr>
  {
    static ::ICPM_module::ICPMEventMgr_ptr duplicate (
        ::ICPM_module::ICPMEventMgr_ptr p);
    static void release (
        ::ICPM_module::ICPMEventMgr_ptr p);
    static ::ICPM_module::ICPMEventMgr_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::ICPM_module::ICPMEventMgr_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::ProcessDef &);
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::ProcessDef &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_ICPM_module_ProcessSeq_H_
#define _TAO_CDR_OP_ICPM_module_ProcessSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


ICPM_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ProcessSeq &_tao_sequence);
ICPM_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ProcessSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_ICPM_module_ProcessSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::NodeDef &);
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::NodeDef &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_ICPM_module_NodeSeq_H_
#define _TAO_CDR_OP_ICPM_module_NodeSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


ICPM_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::NodeSeq &_tao_sequence);
ICPM_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::NodeSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_ICPM_module_NodeSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::CPMMSettingsStartup &);
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::CPMMSettingsStartup &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::CPMMSettings &);
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::CPMMSettings &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::ObjectDesc &);
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::ObjectDesc &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_ICPM_module_ObjectDescSeq_H_
#define _TAO_CDR_OP_ICPM_module_ObjectDescSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


ICPM_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ObjectDescSeq &_tao_sequence);
ICPM_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ObjectDescSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_ICPM_module_ObjectDescSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::ICPMProcess_ptr );
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::ICPMProcess_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::ICPMD_ptr );
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::ICPMD_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::ICPMObject_ptr );
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::ICPMObject_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::UnavailableElementID &);
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::UnavailableElementID &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_sequence\cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_ICPM_module_UnavailableElementIDSeq_H_
#define _TAO_CDR_OP_ICPM_module_UnavailableElementIDSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


ICPM_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::UnavailableElementIDSeq &_tao_sequence);
ICPM_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::UnavailableElementIDSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_ICPM_module_UnavailableElementIDSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::ICPMM_ptr );
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::ICPMM_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

ICPM_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const ICPM_module::ICPMEventMgr_ptr );
ICPM_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, ICPM_module::ICPMEventMgr_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "ICPMC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

