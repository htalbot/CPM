// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.3.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:376


#include "ICPMC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "ICPMC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be\be_visitor_sequence\sequence_cs.cpp:73

#if !defined (_ICPM_MODULE_PROCESSSEQ_CS_)
#define _ICPM_MODULE_PROCESSSEQ_CS_

ICPM_module::ProcessSeq::ProcessSeq (void)
{}

ICPM_module::ProcessSeq::ProcessSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ProcessDef
      > (max)
{}

ICPM_module::ProcessSeq::ProcessSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ICPM_module::ProcessDef * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ProcessDef
      >
    (max, length, buffer, release)
{}

ICPM_module::ProcessSeq::ProcessSeq (
    const ProcessSeq &seq)
  : ::TAO::unbounded_value_sequence<
        ProcessDef
      > (seq)
{}

ICPM_module::ProcessSeq::~ProcessSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_sequence\sequence_cs.cpp:73

#if !defined (_ICPM_MODULE_NODESEQ_CS_)
#define _ICPM_MODULE_NODESEQ_CS_

ICPM_module::NodeSeq::NodeSeq (void)
{}

ICPM_module::NodeSeq::NodeSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        NodeDef
      > (max)
{}

ICPM_module::NodeSeq::NodeSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ICPM_module::NodeDef * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        NodeDef
      >
    (max, length, buffer, release)
{}

ICPM_module::NodeSeq::NodeSeq (
    const NodeSeq &seq)
  : ::TAO::unbounded_value_sequence<
        NodeDef
      > (seq)
{}

ICPM_module::NodeSeq::~NodeSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_sequence\sequence_cs.cpp:73

#if !defined (_ICPM_MODULE_OBJECTDESCSEQ_CS_)
#define _ICPM_MODULE_OBJECTDESCSEQ_CS_

ICPM_module::ObjectDescSeq::ObjectDescSeq (void)
{}

ICPM_module::ObjectDescSeq::ObjectDescSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ObjectDesc
      > (max)
{}

ICPM_module::ObjectDescSeq::ObjectDescSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ICPM_module::ObjectDesc * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ObjectDesc
      >
    (max, length, buffer, release)
{}

ICPM_module::ObjectDescSeq::ObjectDescSeq (
    const ObjectDescSeq &seq)
  : ::TAO::unbounded_value_sequence<
        ObjectDesc
      > (seq)
{}

ICPM_module::ObjectDescSeq::~ObjectDescSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for ICPM_module::ICPMProcess.

ICPM_module::ICPMProcess_ptr
TAO::Objref_Traits<ICPM_module::ICPMProcess>::duplicate (
    ICPM_module::ICPMProcess_ptr p)
{
  return ICPM_module::ICPMProcess::_duplicate (p);
}

void
TAO::Objref_Traits<ICPM_module::ICPMProcess>::release (
    ICPM_module::ICPMProcess_ptr p)
{
  ::CORBA::release (p);
}

ICPM_module::ICPMProcess_ptr
TAO::Objref_Traits<ICPM_module::ICPMProcess>::nil (void)
{
  return ICPM_module::ICPMProcess::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ICPM_module::ICPMProcess>::marshal (
    const ICPM_module::ICPMProcess_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMProcess::object_list (
  ::ICPM_module::ObjectDescSeq_out list)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ObjectDescSeq>::out_arg_val _tao_list (list);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_list
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "object_list",
      11,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMProcess::ctrl_end (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "ctrl_end",
      8,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMProcess::ctrl_ping (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "ctrl_ping",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMProcess::show_console (
  ::CORBA::Boolean show)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_show (show);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_show
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "show_console",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMProcess::show_gui (
  ::CORBA::Boolean show)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_show (show);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_show
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "show_gui",
      8,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMProcess::as_server (
  ::CORBA::Boolean flag)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_flag (flag);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_flag
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "as_server",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMProcess::as_gui (
  ::CORBA::Boolean flag)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_flag (flag);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_flag
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "as_gui",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Long
ICPM_module::ICPMProcess::getpid (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::CORBA::Long>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "getpid",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

ICPM_module::ICPMProcess::ICPMProcess (void)
{
}

ICPM_module::ICPMProcess::~ICPMProcess (void)
{
}

ICPM_module::ICPMProcess_ptr
ICPM_module::ICPMProcess::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMProcess>::narrow (
        _tao_objref,
        "IDL:ICPM_module/ICPMProcess:1.0");
}

ICPM_module::ICPMProcess_ptr
ICPM_module::ICPMProcess::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMProcess>::unchecked_narrow (
        _tao_objref);
}

ICPM_module::ICPMProcess_ptr
ICPM_module::ICPMProcess::_nil (void)
{
  return 0;
}

ICPM_module::ICPMProcess_ptr
ICPM_module::ICPMProcess::_duplicate (ICPMProcess_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ICPM_module::ICPMProcess::_tao_release (ICPMProcess_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ICPM_module::ICPMProcess::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:ICPM_module/ICPMProcess:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ICPM_module::ICPMProcess::_interface_repository_id (void) const
{
  return "IDL:ICPM_module/ICPMProcess:1.0";
}

::CORBA::Boolean
ICPM_module::ICPMProcess::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for ICPM_module::ICPMD.

ICPM_module::ICPMD_ptr
TAO::Objref_Traits<ICPM_module::ICPMD>::duplicate (
    ICPM_module::ICPMD_ptr p)
{
  return ICPM_module::ICPMD::_duplicate (p);
}

void
TAO::Objref_Traits<ICPM_module::ICPMD>::release (
    ICPM_module::ICPMD_ptr p)
{
  ::CORBA::release (p);
}

ICPM_module::ICPMD_ptr
TAO::Objref_Traits<ICPM_module::ICPMD>::nil (void)
{
  return ICPM_module::ICPMD::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ICPM_module::ICPMD>::marshal (
    const ICPM_module::ICPMD_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Boolean
ICPM_module::ICPMD::start (
  const ::ICPM_module::ProcessSeq & procs)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::in_arg_val _tao_procs (procs);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_procs
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "start",
      5,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Boolean
ICPM_module::ICPMD::stop (
  const ::ICPM_module::ProcessSeq & procs)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::in_arg_val _tao_procs (procs);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_procs
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "stop",
      4,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMD::show_console (
  const ::ICPM_module::ProcessSeq & procs,
  ::CORBA::Boolean show)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::in_arg_val _tao_procs (procs);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_show (show);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_procs,
      &_tao_show
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "show_console",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMD::show_gui (
  const ::ICPM_module::ProcessSeq & procs,
  ::CORBA::Boolean show)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::in_arg_val _tao_procs (procs);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_show (show);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_procs,
      &_tao_show
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "show_gui",
      8,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMD::get_launched_processes (
  ::ICPM_module::ProcessSeq_out processes)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::out_arg_val _tao_processes (processes);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_processes
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_launched_processes",
      22,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMD::on_new_getting_reference_timeout (
  ::CORBA::Long loop_timeout_ms,
  ::CORBA::Long attempts)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_loop_timeout_ms (loop_timeout_ms);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_attempts (attempts);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_loop_timeout_ms,
      &_tao_attempts
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "on_new_getting_reference_timeout",
      32,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

ICPM_module::ICPMD::ICPMD (void)
{
}

ICPM_module::ICPMD::~ICPMD (void)
{
}

ICPM_module::ICPMD_ptr
ICPM_module::ICPMD::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMD>::narrow (
        _tao_objref,
        "IDL:ICPM_module/ICPMD:1.0");
}

ICPM_module::ICPMD_ptr
ICPM_module::ICPMD::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMD>::unchecked_narrow (
        _tao_objref);
}

ICPM_module::ICPMD_ptr
ICPM_module::ICPMD::_nil (void)
{
  return 0;
}

ICPM_module::ICPMD_ptr
ICPM_module::ICPMD::_duplicate (ICPMD_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ICPM_module::ICPMD::_tao_release (ICPMD_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ICPM_module::ICPMD::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:ICPM_module/ICPMD:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ICPM_module::ICPMD::_interface_repository_id (void) const
{
  return "IDL:ICPM_module/ICPMD:1.0";
}

::CORBA::Boolean
ICPM_module::ICPMD::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for ICPM_module::ICPMObject.

ICPM_module::ICPMObject_ptr
TAO::Objref_Traits<ICPM_module::ICPMObject>::duplicate (
    ICPM_module::ICPMObject_ptr p)
{
  return ICPM_module::ICPMObject::_duplicate (p);
}

void
TAO::Objref_Traits<ICPM_module::ICPMObject>::release (
    ICPM_module::ICPMObject_ptr p)
{
  ::CORBA::release (p);
}

ICPM_module::ICPMObject_ptr
TAO::Objref_Traits<ICPM_module::ICPMObject>::nil (void)
{
  return ICPM_module::ICPMObject::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ICPM_module::ICPMObject>::marshal (
    const ICPM_module::ICPMObject_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMObject::get_version (
  ::CORBA::Long_out major,
  ::CORBA::Long_out minor,
  ::CORBA::Long_out patch)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_major (major);
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_minor (minor);
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_patch (patch);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_major,
      &_tao_minor,
      &_tao_patch
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "get_version",
      11,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMObject::ctrl_ping (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "ctrl_ping",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);
}

ICPM_module::ICPMObject::ICPMObject (void)
{
}

ICPM_module::ICPMObject::~ICPMObject (void)
{
}

ICPM_module::ICPMObject_ptr
ICPM_module::ICPMObject::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMObject>::narrow (
        _tao_objref,
        "IDL:ICPM_module/ICPMObject:1.0");
}

ICPM_module::ICPMObject_ptr
ICPM_module::ICPMObject::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMObject>::unchecked_narrow (
        _tao_objref);
}

ICPM_module::ICPMObject_ptr
ICPM_module::ICPMObject::_nil (void)
{
  return 0;
}

ICPM_module::ICPMObject_ptr
ICPM_module::ICPMObject::_duplicate (ICPMObject_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ICPM_module::ICPMObject::_tao_release (ICPMObject_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ICPM_module::ICPMObject::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:ICPM_module/ICPMObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ICPM_module::ICPMObject::_interface_repository_id (void) const
{
  return "IDL:ICPM_module/ICPMObject:1.0";
}

::CORBA::Boolean
ICPM_module::ICPMObject::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_sequence\sequence_cs.cpp:73

#if !defined (_ICPM_MODULE_UNAVAILABLEELEMENTIDSEQ_CS_)
#define _ICPM_MODULE_UNAVAILABLEELEMENTIDSEQ_CS_

ICPM_module::UnavailableElementIDSeq::UnavailableElementIDSeq (void)
{}

ICPM_module::UnavailableElementIDSeq::UnavailableElementIDSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        UnavailableElementID
      > (max)
{}

ICPM_module::UnavailableElementIDSeq::UnavailableElementIDSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ICPM_module::UnavailableElementID * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        UnavailableElementID
      >
    (max, length, buffer, release)
{}

ICPM_module::UnavailableElementIDSeq::UnavailableElementIDSeq (
    const UnavailableElementIDSeq &seq)
  : ::TAO::unbounded_value_sequence<
        UnavailableElementID
      > (seq)
{}

ICPM_module::UnavailableElementIDSeq::~UnavailableElementIDSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for ICPM_module::ICPMM.

ICPM_module::ICPMM_ptr
TAO::Objref_Traits<ICPM_module::ICPMM>::duplicate (
    ICPM_module::ICPMM_ptr p)
{
  return ICPM_module::ICPMM::_duplicate (p);
}

void
TAO::Objref_Traits<ICPM_module::ICPMM>::release (
    ICPM_module::ICPMM_ptr p)
{
  ::CORBA::release (p);
}

ICPM_module::ICPMM_ptr
TAO::Objref_Traits<ICPM_module::ICPMM>::nil (void)
{
  return ICPM_module::ICPMM::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ICPM_module::ICPMM>::marshal (
    const ICPM_module::ICPMM_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMM::get_settings (
  ::ICPM_module::CPMMSettings_out initial,
  ::ICPM_module::CPMMSettings_out current,
  ::CORBA::String_out current_settings_file)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::CPMMSettings>::out_arg_val _tao_initial (initial);
  TAO::Arg_Traits< ::ICPM_module::CPMMSettings>::out_arg_val _tao_current (current);
  TAO::Arg_Traits< char *>::out_arg_val _tao_current_settings_file (current_settings_file);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_initial,
      &_tao_current,
      &_tao_current_settings_file
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "get_settings",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Boolean
ICPM_module::ICPMM::start (
  const ::ICPM_module::ProcessSeq & procs)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::in_arg_val _tao_procs (procs);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_procs
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "start",
      5,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Boolean
ICPM_module::ICPMM::stop (
  const ::ICPM_module::ProcessSeq & procs)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::in_arg_val _tao_procs (procs);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_procs
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "stop",
      4,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMM::show_console (
  const ::ICPM_module::ProcessSeq & procs,
  ::CORBA::Boolean show)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::in_arg_val _tao_procs (procs);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_show (show);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_procs,
      &_tao_show
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "show_console",
      12,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMM::show_gui (
  const ::ICPM_module::ProcessSeq & procs,
  ::CORBA::Boolean show)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::ProcessSeq>::in_arg_val _tao_procs (procs);
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::in_arg_val _tao_show (show);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_procs,
      &_tao_show
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "show_gui",
      8,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Boolean
ICPM_module::ICPMM::started (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "started",
      7,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Boolean
ICPM_module::ICPMM::get_unavailable (
  ::ICPM_module::UnavailableElementIDSeq_out nodes,
  ::ICPM_module::UnavailableElementIDSeq_out processes)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::UnavailableElementIDSeq>::out_arg_val _tao_nodes (nodes);
  TAO::Arg_Traits< ::ICPM_module::UnavailableElementIDSeq>::out_arg_val _tao_processes (processes);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_nodes,
      &_tao_processes
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "get_unavailable",
      15,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMM::update_settings (
  const ::ICPM_module::CPMMSettings & new_initial_settings,
  const ::ICPM_module::CPMMSettings & new_current_settings,
  const char * file)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::ICPM_module::CPMMSettings>::in_arg_val _tao_new_initial_settings (new_initial_settings);
  TAO::Arg_Traits< ::ICPM_module::CPMMSettings>::in_arg_val _tao_new_current_settings (new_current_settings);
  TAO::Arg_Traits< char *>::in_arg_val _tao_file (file);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_new_initial_settings,
      &_tao_new_current_settings,
      &_tao_file
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "update_settings",
      15,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Boolean
ICPM_module::ICPMM::save_settings_to (
  const char * target_file)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_target_file (target_file);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_target_file
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "save_settings_to",
      16,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

::CORBA::Boolean
ICPM_module::ICPMM::set_as_default (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "set_as_default",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

ICPM_module::ICPMM::ICPMM (void)
{
}

ICPM_module::ICPMM::~ICPMM (void)
{
}

ICPM_module::ICPMM_ptr
ICPM_module::ICPMM::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMM>::narrow (
        _tao_objref,
        "IDL:ICPM_module/ICPMM:1.0");
}

ICPM_module::ICPMM_ptr
ICPM_module::ICPMM::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMM>::unchecked_narrow (
        _tao_objref);
}

ICPM_module::ICPMM_ptr
ICPM_module::ICPMM::_nil (void)
{
  return 0;
}

ICPM_module::ICPMM_ptr
ICPM_module::ICPMM::_duplicate (ICPMM_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ICPM_module::ICPMM::_tao_release (ICPMM_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ICPM_module::ICPMM::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:ICPM_module/ICPMM:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ICPM_module::ICPMM::_interface_repository_id (void) const
{
  return "IDL:ICPM_module/ICPMM:1.0";
}

::CORBA::Boolean
ICPM_module::ICPMM::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface\interface_cs.cpp:51

// Traits specializations for ICPM_module::ICPMEventMgr.

ICPM_module::ICPMEventMgr_ptr
TAO::Objref_Traits<ICPM_module::ICPMEventMgr>::duplicate (
    ICPM_module::ICPMEventMgr_ptr p)
{
  return ICPM_module::ICPMEventMgr::_duplicate (p);
}

void
TAO::Objref_Traits<ICPM_module::ICPMEventMgr>::release (
    ICPM_module::ICPMEventMgr_ptr p)
{
  ::CORBA::release (p);
}

ICPM_module::ICPMEventMgr_ptr
TAO::Objref_Traits<ICPM_module::ICPMEventMgr>::nil (void)
{
  return ICPM_module::ICPMEventMgr::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ICPM_module::ICPMEventMgr>::marshal (
    const ICPM_module::ICPMEventMgr_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be\be_visitor_operation\operation_cs.cpp:91

void
ICPM_module::ICPMEventMgr::push (
  const ::IBASICEVENTCORBA_module::BasicEventCorba & event)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::IBASICEVENTCORBA_module::BasicEventCorba>::in_arg_val _tao_event (event);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_event
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "push",
      4,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

ICPM_module::ICPMEventMgr::ICPMEventMgr (void)
{
}

ICPM_module::ICPMEventMgr::~ICPMEventMgr (void)
{
}

ICPM_module::ICPMEventMgr_ptr
ICPM_module::ICPMEventMgr::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMEventMgr>::narrow (
        _tao_objref,
        "IDL:ICPM_module/ICPMEventMgr:1.0");
}

ICPM_module::ICPMEventMgr_ptr
ICPM_module::ICPMEventMgr::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ICPMEventMgr>::unchecked_narrow (
        _tao_objref);
}

ICPM_module::ICPMEventMgr_ptr
ICPM_module::ICPMEventMgr::_nil (void)
{
  return 0;
}

ICPM_module::ICPMEventMgr_ptr
ICPM_module::ICPMEventMgr::_duplicate (ICPMEventMgr_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ICPM_module::ICPMEventMgr::_tao_release (ICPMEventMgr_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ICPM_module::ICPMEventMgr::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:ICPM_module/ICPMObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:ICPM_module/ICPMEventMgr:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ICPM_module::ICPMEventMgr::_interface_repository_id (void) const
{
  return "IDL:ICPM_module/ICPMEventMgr:1.0";
}

::CORBA::Boolean
ICPM_module::ICPMEventMgr::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ProcessDef &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.node_id.in ()) &&
    (strm << _tao_aggregate.process_id.in ()) &&
    (strm << _tao_aggregate.env_var_id.in ()) &&
    (strm << _tao_aggregate.module_name.in ()) &&
    (strm << _tao_aggregate.port_number.in ()) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.enabled)) &&
    (strm << _tao_aggregate.console.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ProcessDef &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.node_id.out ()) &&
    (strm >> _tao_aggregate.process_id.out ()) &&
    (strm >> _tao_aggregate.env_var_id.out ()) &&
    (strm >> _tao_aggregate.module_name.out ()) &&
    (strm >> _tao_aggregate.port_number.out ()) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.enabled)) &&
    (strm >> _tao_aggregate.console.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_sequence\cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_ICPM_module_ProcessSeq_CPP_
#define _TAO_CDR_OP_ICPM_module_ProcessSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ProcessSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ProcessSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_ICPM_module_ProcessSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::NodeDef &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.node_id.in ()) &&
    (strm << _tao_aggregate.processes) &&
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.enabled)) &&
    (strm << _tao_aggregate.env_var.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::NodeDef &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.node_id.out ()) &&
    (strm >> _tao_aggregate.processes) &&
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.enabled)) &&
    (strm >> _tao_aggregate.env_var.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_sequence\cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_ICPM_module_NodeSeq_CPP_
#define _TAO_CDR_OP_ICPM_module_NodeSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::NodeSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::NodeSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_ICPM_module_NodeSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::CPMMSettingsStartup &_tao_aggregate)
{
  return
    (strm << ::ACE_OutputCDR::from_boolean (_tao_aggregate.auto_launch_processes)) &&
    (strm << _tao_aggregate.required_time_before_stop_since_start_ms);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::CPMMSettingsStartup &_tao_aggregate)
{
  return
    (strm >> ::ACE_InputCDR::to_boolean (_tao_aggregate.auto_launch_processes)) &&
    (strm >> _tao_aggregate.required_time_before_stop_since_start_ms);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::CPMMSettings &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.settings_id.in ()) &&
    (strm << _tao_aggregate.startup) &&
    (strm << _tao_aggregate.nodes);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::CPMMSettings &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.settings_id.out ()) &&
    (strm >> _tao_aggregate.startup) &&
    (strm >> _tao_aggregate.nodes);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ObjectDesc &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.object_id.in ()) &&
    (strm << _tao_aggregate.status);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ObjectDesc &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.object_id.out ()) &&
    (strm >> _tao_aggregate.status);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_sequence\cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_ICPM_module_ObjectDescSeq_CPP_
#define _TAO_CDR_OP_ICPM_module_ObjectDescSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ObjectDescSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ObjectDescSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_ICPM_module_ObjectDescSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ICPMProcess_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ICPMProcess_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::ICPM_module::ICPMProcess RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ICPMD_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ICPMD_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::ICPM_module::ICPMD RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ICPMObject_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ICPMObject_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::ICPM_module::ICPMObject RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_structure\cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::UnavailableElementID &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.element_id.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::UnavailableElementID &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.element_id.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_sequence\cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_ICPM_module_UnavailableElementIDSeq_CPP_
#define _TAO_CDR_OP_ICPM_module_UnavailableElementIDSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::UnavailableElementIDSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::UnavailableElementIDSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_ICPM_module_UnavailableElementIDSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ICPMM_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ICPMM_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::ICPM_module::ICPMM RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_interface\cdr_op_cs.cpp:54

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ICPM_module::ICPMEventMgr_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ICPM_module::ICPMEventMgr_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::ICPM_module::ICPMEventMgr RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



