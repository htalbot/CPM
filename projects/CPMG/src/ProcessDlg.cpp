// -*- C++ -*- generated by wxGlade 0.6.5 on Fri Nov 16 12:56:23 2012 from "C:\Projects\CPM\core\CPMG\src\CPMG.wxg"

#include "ACEWin64Warnings/BeginSuppressWarnings.h"
#include "ace/ACE.h" // to avoid problem with mode_t (wxWidgets\2.9.4\include\wx\filefn.h: line 82: wxNEEDS_MODE_T)
#include "ACEWin64Warnings/EndSuppressWarnings.h"

#include "ProcessDlg.h"
#include "wxids.h"

#include <list>

// begin wxGlade: ::extracode

// end wxGlade

#define wxTHICK_FRAME wxRESIZE_BORDER

ProcessDlg::ProcessDlg(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxTHICK_FRAME)
{
    style;

    // begin wxGlade: ProcessDlg::ProcessDlg
    label_process_id = new wxStaticText(this, wxID_ANY, wxT("Process ID:"));
    text_ctrl_process_id = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    label_env_var_id = new wxStaticText(this, wxID_ANY, wxT("Environment variable ID: "));
    text_ctrl_env_var_id = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    label_module_name = new wxStaticText(this, wxID_ANY, wxT("Module name:"));
    text_ctrl_module_name = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    label_port = new wxStaticText(this, wxID_ANY, wxT("Port: "));
    text_ctrl_port = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    checkbox_enabled = new wxCheckBox(this, wxID_ANY, wxT("Enabled"));
    button_ok = new wxButton(this, wxID_HIGHEST + wxID_process_ok, wxT("Ok"));
    button_cancel = new wxButton(this, wxID_HIGHEST + wxID_process_cancel, wxT("Cancel"));

    set_properties();
    do_layout();
    // end wxGlade

    text_ctrl_process_id->SetValue("Proc2");
    text_ctrl_env_var_id->SetValue("PROC2_ROOT");
    text_ctrl_module_name->SetValue("mmm");
    text_ctrl_port->SetValue("10030");
    checkbox_enabled->SetValue(false);
}


BEGIN_EVENT_TABLE(ProcessDlg, wxDialog)
    // begin wxGlade: ProcessDlg::event_table
    EVT_BUTTON(wxID_HIGHEST + wxID_process_ok, ProcessDlg::on_button_ok)
    EVT_BUTTON(wxID_HIGHEST + wxID_process_cancel, ProcessDlg::on_button_cancel)
    // end wxGlade
END_EVENT_TABLE();


void ProcessDlg::on_button_ok(wxCommandEvent &)
{
    std::list<std::string> missing;

    if (text_ctrl_process_id->GetValue().empty())
    {
        missing.push_back("Process ID");
    }

    if (text_ctrl_env_var_id->GetValue().empty())
    {
        missing.push_back("Environment variable ID");
    }

    if (text_ctrl_module_name->GetValue().empty())
    {
        missing.push_back("Module name");
    }

    if (text_ctrl_port->GetValue().empty())
    {
        missing.push_back("Port");
    }

    std::string msg("The following fields are missing:\n\n");
    if (!missing.empty())
    {
        std::list<std::string>::iterator it;
        for (it = missing.begin(); it != missing.end(); it++)
        {
            msg += *it + "\n";
        }

        wxMessageBox(msg.c_str(),
                        "Missing fields",
                        wxOK | wxICON_ERROR);
        return;
    }

    this->EndModal(wxID_OK);
}


void ProcessDlg::on_button_cancel(wxCommandEvent &)
{
    this->EndModal(wxID_CANCEL);
}


// wxGlade: add ProcessDlg event handlers


void ProcessDlg::set_properties()
{
    // begin wxGlade: ProcessDlg::set_properties
    SetTitle(wxT("Process"));
    // end wxGlade
}


void ProcessDlg::do_layout()
{
    // begin wxGlade: ProcessDlg::do_layout
    wxBoxSizer* sizer_6 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_18 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_19 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_16 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_15 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_13 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_10 = new wxBoxSizer(wxHORIZONTAL);
    sizer_10->Add(label_process_id, 0, wxALL, 3);
    sizer_10->Add(text_ctrl_process_id, 1, wxALL, 3);
    sizer_6->Add(sizer_10, 1, wxTOP|wxEXPAND, 10);
    sizer_13->Add(label_env_var_id, 0, wxALL, 3);
    sizer_13->Add(text_ctrl_env_var_id, 1, wxALL, 3);
    sizer_6->Add(sizer_13, 1, wxEXPAND, 0);
    sizer_15->Add(label_module_name, 0, wxALL, 3);
    sizer_15->Add(text_ctrl_module_name, 1, wxALL, 3);
    sizer_6->Add(sizer_15, 1, wxEXPAND, 0);
    sizer_16->Add(label_port, 0, wxALL, 3);
    sizer_16->Add(text_ctrl_port, 1, wxALL, 3);
    sizer_6->Add(sizer_16, 1, wxEXPAND, 0);
    sizer_19->Add(checkbox_enabled, 0, wxALL, 3);
    sizer_6->Add(sizer_19, 1, wxALIGN_CENTER_HORIZONTAL, 0);
    sizer_18->Add(button_ok, 0, wxALL, 3);
    sizer_18->Add(button_cancel, 0, wxALL, 3);
    sizer_6->Add(sizer_18, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    SetSizer(sizer_6);
    sizer_6->Fit(this);
    Layout();
    // end wxGlade
}

